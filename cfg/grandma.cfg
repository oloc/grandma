#
# FICHIER DE CONFIGURATION GRANDMA
# 

#
# AFFECTATION DES VARIABLES
#

# VARIABLE SONDE PHYSIQUE
nomsonde="Grandma"

# VARIABLES POUR ARCHIVAGE DES "VUES"
timestamp="`date '+%Y%m%d-%H%M%S'`"

# POSITIONNEMENT DES VARIABLES SPECIFIQUES A LA SONDE PHYSIQUE
. $GRANDMAHOME/cfg/$nomsonde.cfg

#
# FONCTIONS GENERIQUES DE L'APPLICATION
#

#	FONCTION DE CALCUL DE LA PERF DU SCENARIO
function TIMESTAMP {
        date1=`cat $tmpdir/timestamp`
        date2=`date '+%s.%N'`
        timestamp=`echo "$date2 - $date1" | bc | sed 's/^\./0\./'`
}

#	FONCTION DE COMPTAGE D'UN PATTERN DANS LA PAGE RETOURNEE
function COUNT {
	count=`$grep -c "$1" $tmpdir/page.html`
}

#	FONCTION DE REMONTEE DES INFOS NSCA VERS LE CENTRALISATEUR
function NSCA {
	if [ "$nscaserver" != "" ]
	then
        	echo "$nomsonde/$scriptname/$reponse/$libelle" | $NSCAHOME/send_nsca -H $nscaserver -d '/' -to 5 -c $GRANDMAHOME/cfg/send_nsca.cfg 1> /dev/null 2>&1
	fi
	if [ "$nscaserver2" != "" ]
	then
        	echo "$nomsonde/$scriptname/$reponse/$libelle" | $NSCAHOME/send_nsca -H $nscaserver -d '/' -to 5 -c $GRANDMAHOME/cfg/send_nsca.cfg 1> /dev/null 2>&1
	fi
	if [ "$nscaserver3" != "" ]
	then
        	echo "$nomsonde/$scriptname/$reponse/$libelle" | $NSCAHOME/send_nsca -H $nscaserver -d '/' -to 5 -c $GRANDMAHOME/cfg/send_nsca.cfg 1> /dev/null 2>&1
	fi
	if [ "$nscaserver4" != "" ]
	then
        	echo "$nomsonde/$scriptname/$reponse/$libelle" | $NSCAHOME/send_nsca -H $nscaserver -d '/' -to 5 -c $GRANDMAHOME/cfg/send_nsca.cfg 1> /dev/null 2>&1
	fi
	if [ "$nscaserver5" != "" ]
	then
        	echo "$nomsonde/$scriptname/$reponse/$libelle" | $NSCAHOME/send_nsca -H $nscaserver -d '/' -to 5 -c $GRANDMAHOME/cfg/send_nsca.cfg 1> /dev/null 2>&1
	fi
	if [ "$nscaserver6" != "" ]
	then
        	echo "$nomsonde/$scriptname/$reponse/$libelle" | $NSCAHOME/send_nsca -H $nscaserver -d '/' -to 5 -c $GRANDMAHOME/cfg/send_nsca.cfg 1> /dev/null 2>&1
	fi
}

#	FONCTION DE TEST DE L'EXIT STATUS DE CURL
function TESTRET {
	retour=$?
	TIMESTAMP
	if [ $retour -ne 0 ]
	then
		reponse=2
		url=`echo -n $archdir | sed -e "s/^\/opt\/grandma/<A href=http\:\/\/$URLSONDE\:8080/"; echo ' target=_blank>ERREUR</A>'`
		libelle=`echo "KO : probleme technique lors de la requete, cURL a renvoye le code $retour $1 - Erreur apres $timestamp s - $url | ko=$timestamp" | $tee $tmpdir/codret.txt`
		echo $libelle
		NSCA
		mkdir -p $archdir
		mv -v $tmpdir/* $archdir > /dev/null 2>&1
		rm -rf $tmpdir > /dev/null 2>&1
		exit $reponse
	fi
}

#	FONCTIONS GERANT LES EXIT STATUS & LES LIBELLES DE LA SORTIE NAGIOS
function UNKNOWN {
	reponse=3
	libelle=`echo $1 | $tee $tmpdir/codret.txt`
	echo $libelle
	NSCA
	mkdir -p $archdir
	mv -f $tmpdir/* $archdir > /dev/null 2>&1
	rm -rf $tmpdir > /dev/null 2>&1
        exit $reponse
}
function FATAL {
	TIMESTAMP
	reponse=2
	url=`echo -n $archdir | sed -e "s/^\/opt\/grandma/<A href=http\:\/\/$URLSONDE\:8080/" ; echo ' target=_blank>ERREUR</A>'`
	libelle=`echo "$1 - Scenario execute en $timestamp s - $url | ko=$timestamp" | $tee $tmpdir/codret.txt`
	echo $libelle
	NSCA
	mkdir -p $archdir
	mv -f $tmpdir/* $archdir > /dev/null 2>&1
	rm -rf $tmpdir > /dev/null 2>&1
        exit $reponse
}
function WARNING {
	TIMESTAMP
	reponse=1
	url=`echo -n $archdir | sed -e "s/^\/opt\/grandma/<A href=http\:\/\/$URLSONDE\:8080/" ; echo ' target=_blank>ERREUR</A>'`
	libelle=`echo "$1 - Scenario execute en $timestamp s - $url | ko=$timestamp" | $tee $tmpdir/codret.txt`
	echo $libelle
	NSCA
	mkdir -p $archdir
	mv -f $tmpdir/* $archdir > /dev/null 2>&1
	rm -rf $tmpdir > /dev/null 2>&1
        exit $reponse
}
function OK {
	TIMESTAMP
        unit=${timestamp%%.*}
        if [ $unit -ge $TIMEOUT ]
        then
                WARNING "Scenario degrade (lenteur anormale) "
        fi
	reponse=0
        libelle=`echo "$1 - Scenario execute en $timestamp s | ok=$timestamp"`
	echo $libelle
	NSCA
        # Purge des repertoires de travail
        rm -rf $tmpdir 1> /dev/null 2>&1
        if [ $? -ne 0 ]
        then
                UNKNOWN "KO : impossible de supprimer les repertoires de travail" | $tee -a $tmpdir/codret.txt
        fi
        exit $reponse
}
function OKOUT {
	reponse=0
        libelle=`echo "$1"`
	echo $libelle
	NSCA
        # Purge des repertoires de travail
        rm -rf $tmpdir 1> /dev/null 2>&1
        if [ $? -ne 0 ]
        then
                UNKNOWN "KO : impossible de supprimer les repertoires de travail" | $tee -a $tmpdir/codret.txt
        fi
        exit $reponse
}
